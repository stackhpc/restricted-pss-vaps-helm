---
{{ include "restricted-pss-vaps.vap" (dict 
  "name" "kubescape-c-0041-deny-resources-with-host-network-access"
  "message" "Pods with hostNetwork enabled may cause security issues. (see more at https://hub.armosec.io/docs/c-0041)"
  "resource" "pod"
  "hasParams" false
  "podExpression" (include "containerCheckExpressions.hostNetwork" "object.spec")
  "deploymentExpression" (include "containerCheckExpressions.hostNetwork" "object.spec.template.spec")
  "jobExpression" (include "containerCheckExpressions.hostNetwork" "object.spec.jobTemplate.spec.template.spec") 
)}}
---
{{ include "restricted-pss-vaps.vap" (dict 
  "name" "kubescape-c-0038-deny-resources-with-host-ipc-or-pid-privileges"
  "message" "Pods with hostPID and hostIPC fields enabled may allow cross-container influence. (see more at https://hub.armosec.io/docs/c-0038)"
  "resource" "pod"
  "hasParams" false
  "podExpression" (include "containerCheckExpressions.hostIpcPid" "object.spec")
  "deploymentExpression" (include "containerCheckExpressions.hostIpcPid" "object.spec.template.spec")
  "jobExpression" (include "containerCheckExpressions.hostIpcPid" "object.spec.jobTemplate.spec.template.spec") 
)}}
---
{{ include "restricted-pss-vaps.vap" (dict 
  "name" "kubescape-c-0048-deny-workloads-with-hostpath-mounts"
  "message" "There are one or more hostPath mounts in the Pod! (see more at https://hub.armosec.io/docs/c-0048)"
  "resource" "pod"
  "hasParams" false
  "podExpression" (include "containerCheckExpressions.hostPathVolumes" "object.spec")
  "deploymentExpression" (include "containerCheckExpressions.hostPathVolumes" "object.spec.template.spec")
  "jobExpression" (include "containerCheckExpressions.hostPathVolumes" "object.spec.jobTemplate.spec.template.spec") 
)}}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  name: apparmor-annotation
spec:
{{- template "restricted-pss-vaps.pod-resource-preamble" }}
  validations:
  - expression: |
     !has(object.metadata.annotations) || object.metadata.annotations.filter(annotation, annotation.matches("container.apparmor.security.beta.kubernetes.io/*")).all(currentAnnotation, object.metadata.annotations[currentAnnotation] != "Unconfined")
    message: Must not set annotations["container.apparmor.security.beta.kubernetes.io/*"] to 'Unconfined'